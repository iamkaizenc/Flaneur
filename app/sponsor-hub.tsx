import React from "react";
import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  TouchableOpacity,\n  Platform,\n  Image,\n  FlatList,\n} from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { \n  ArrowLeft,\n  Star,\n  Lock,\n  TrendingUp,\n  Users,\n  Heart,\n  Lightbulb,\n} from \"lucide-react-native\";\nimport { useRouter } from \"expo-router\";\nimport { theme } from \"@/constants/theme\";\nimport { trpc } from \"@/lib/trpc\";\nimport { useAIMarketer } from \"@/providers/AIMarketerProvider\";\n\ninterface SponsorCardProps {\n  sponsor: {\n    id: string;\n    brandName: string;\n    logo: string;\n    category: string;\n    budget: string;\n    requirements: {\n      minFollowers: number;\n      minEngagement: number;\n      minFameScore: number;\n    };\n    description: string;\n    status: string;\n    matchScore: number;\n  };\n  isLocked?: boolean;\n  userStats: {\n    followers: number;\n    engagementRate: number;\n    fameScore: number;\n  };\n}\n\ninterface TipCardProps {\n  tip: {\n    id: string;\n    title: string;\n    description: string;\n    impact: string;\n    icon: string;\n  };\n}\n\nconst SponsorCard: React.FC<SponsorCardProps> = ({ sponsor, isLocked, userStats }) => {\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"interested\": return \"#10B981\";\n      case \"reviewing\": return \"#F59E0B\";\n      case \"pending\": return \"#6B7280\";\n      default: return \"#6B7280\";\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case \"interested\": return \"ƒ∞lgileniyor\";\n      case \"reviewing\": return \"ƒ∞nceliyor\";\n      case \"pending\": return \"Beklemede\";\n      default: return \"Bilinmiyor\";\n    }\n  };\n\n  return (\n    <TouchableOpacity \n      style={[styles.sponsorCard, isLocked && styles.sponsorCardLocked]} \n      activeOpacity={0.7}\n      disabled={isLocked}\n    >\n      {isLocked && (\n        <View style={styles.lockOverlay}>\n          <Lock size={24} color={theme.colors.gray[400]} />\n        </View>\n      )}\n      \n      <View style={styles.sponsorHeader}>\n        <Image source={{ uri: sponsor.logo }} style={styles.sponsorLogo} />\n        <View style={styles.sponsorInfo}>\n          <Text style={styles.sponsorName}>{sponsor.brandName}</Text>\n          <Text style={styles.sponsorCategory}>{sponsor.category}</Text>\n        </View>\n        <View style={styles.matchScoreContainer}>\n          <Text style={styles.matchScore}>{sponsor.matchScore}%</Text>\n          <Text style={styles.matchLabel}>Uyum</Text>\n        </View>\n      </View>\n\n      <Text style={styles.sponsorDescription}>{sponsor.description}</Text>\n      \n      <View style={styles.sponsorBudget}>\n        <Text style={styles.budgetLabel}>B√ºt√ße:</Text>\n        <Text style={styles.budgetAmount}>{sponsor.budget}</Text>\n      </View>\n\n      <View style={styles.requirementsContainer}>\n        <Text style={styles.requirementsTitle}>Gereksinimler:</Text>\n        <View style={styles.requirementsList}>\n          <View style={styles.requirementItem}>\n            <Users size={14} color={theme.colors.gray[500]} />\n            <Text style={[\n              styles.requirementText,\n              userStats.followers >= sponsor.requirements.minFollowers ? styles.requirementMet : styles.requirementNotMet\n            ]}>\n              {sponsor.requirements.minFollowers.toLocaleString()} takip√ßi\n            </Text>\n          </View>\n          <View style={styles.requirementItem}>\n            <Heart size={14} color={theme.colors.gray[500]} />\n            <Text style={[\n              styles.requirementText,\n              userStats.engagementRate >= sponsor.requirements.minEngagement ? styles.requirementMet : styles.requirementNotMet\n            ]}>\n              %{sponsor.requirements.minEngagement} etkile≈üim\n            </Text>\n          </View>\n          <View style={styles.requirementItem}>\n            <Star size={14} color={theme.colors.gray[500]} />\n            <Text style={[\n              styles.requirementText,\n              userStats.fameScore >= sponsor.requirements.minFameScore ? styles.requirementMet : styles.requirementNotMet\n            ]}>\n              {sponsor.requirements.minFameScore} FameScore\n            </Text>\n          </View>\n        </View>\n      </View>\n\n      <View style={styles.sponsorFooter}>\n        <View style={[styles.statusBadge, { backgroundColor: getStatusColor(sponsor.status) + \"20\" }]}>\n          <Text style={[styles.statusText, { color: getStatusColor(sponsor.status) }]}>\n            {getStatusText(sponsor.status)}\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst TipCard: React.FC<TipCardProps> = ({ tip }) => (\n  <View style={styles.tipCard}>\n    <View style={styles.tipHeader}>\n      <Text style={styles.tipIcon}>{tip.icon}</Text>\n      <View style={styles.tipInfo}>\n        <Text style={styles.tipTitle}>{tip.title}</Text>\n        <Text style={styles.tipDescription}>{tip.description}</Text>\n      </View>\n      <Text style={styles.tipImpact}>{tip.impact}</Text>\n    </View>\n  </View>\n);\n\nexport default function SponsorHubScreen() {\n  const router = useRouter();\n  const { user } = useAIMarketer();\n  const sponsorQuery = trpc.sponsors.hub.useQuery({ userId: \"user-1\" });\n\n  // Check if user has premium/platinum plan\n  const hasAccess = user?.plan === \"premium\" || user?.plan === \"platinum\";\n\n  if (!hasAccess) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.header}>\n          <TouchableOpacity onPress={() => router.back()} style={styles.backButton}>\n            <ArrowLeft size={24} color={theme.colors.white} />\n          </TouchableOpacity>\n          <Text style={styles.headerTitle}>Sponsor Hub</Text>\n        </View>\n\n        <View style={styles.upsellContainer}>\n          <View style={styles.upsellCard}>\n            <Text style={styles.upsellTitle}>üåü Sponsor Hub'a Eri≈üim</Text>\n            <Text style={styles.upsellDescription}>\n              Markalar profiline bakƒ±yor! Premium'a y√ºkselt ve sponsor fƒ±rsatlarƒ±nƒ± ke≈üfet.\n            </Text>\n            <TouchableOpacity style={styles.upgradeButton}>\n              <Text style={styles.upgradeButtonText}>Premium'a Y√ºkselt</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity onPress={() => router.back()} style={styles.backButton}>\n          <ArrowLeft size={24} color={theme.colors.white} />\n        </TouchableOpacity>\n        <Text style={styles.headerTitle}>Sponsor Hub</Text>\n      </View>\n\n      <ScrollView \n        contentContainerStyle={styles.scrollContent}\n        showsVerticalScrollIndicator={false}\n      >\n        {sponsorQuery.data && (\n          <>\n            <View style={styles.statsCard}>\n              <Text style={styles.statsTitle}>Profilin Durumu</Text>\n              <View style={styles.statsGrid}>\n                <View style={styles.statItem}>\n                  <Users size={20} color={\"#3B82F6\"} />\n                  <Text style={styles.statValue}>{sponsorQuery.data.userStats.followers.toLocaleString()}</Text>\n                  <Text style={styles.statLabel}>Takip√ßi</Text>\n                </View>\n                <View style={styles.statItem}>\n                  <Heart size={20} color={\"#EF4444\"} />\n                  <Text style={styles.statValue}>%{sponsorQuery.data.userStats.engagementRate}</Text>\n                  <Text style={styles.statLabel}>Etkile≈üim</Text>\n                </View>\n                <View style={styles.statItem}>\n                  <Star size={20} color={\"#F59E0B\"} />\n                  <Text style={styles.statValue}>{sponsorQuery.data.userStats.fameScore}</Text>\n                  <Text style={styles.statLabel}>FameScore</Text>\n                </View>\n              </View>\n            </View>\n\n            {sponsorQuery.data.eligibleSponsors.length > 0 && (\n              <View style={styles.section}>\n                <Text style={styles.sectionTitle}>Uygun Sponsorlar ({sponsorQuery.data.eligibleCount})</Text>\n                {sponsorQuery.data.eligibleSponsors.map((sponsor) => (\n                  <SponsorCard\n                    key={sponsor.id}\n                    sponsor={sponsor}\n                    userStats={sponsorQuery.data.userStats}\n                  />\n                ))}\n              </View>\n            )}\n\n            {sponsorQuery.data.lockedSponsors.length > 0 && (\n              <View style={styles.section}>\n                <Text style={styles.sectionTitle}>Kilitli Sponsorlar</Text>\n                <Text style={styles.sectionSubtitle}>\n                  Bu sponsorlara eri≈ümek i√ßin profilini g√º√ßlendir\n                </Text>\n                {sponsorQuery.data.lockedSponsors.map((sponsor) => (\n                  <SponsorCard\n                    key={sponsor.id}\n                    sponsor={sponsor}\n                    userStats={sponsorQuery.data.userStats}\n                    isLocked\n                  />\n                ))}\n              </View>\n            )}\n\n            <View style={styles.section}>\n              <View style={styles.tipsHeader}>\n                <Lightbulb size={20} color={theme.colors.white} />\n                <Text style={styles.sectionTitle}>Profilini G√º√ßlendir</Text>\n              </View>\n              <Text style={styles.sectionSubtitle}>\n                FameScore {sponsorQuery.data.nextMilestone.target}+ i√ßin ipu√ßlarƒ±\n              </Text>\n              <View style={styles.milestoneProgress}>\n                <View style={styles.milestoneBar}>\n                  <View \n                    style={[\n                      styles.milestoneBarFill, \n                      { width: `${(sponsorQuery.data.nextMilestone.current / sponsorQuery.data.nextMilestone.target) * 100}%` }\n                    ]} \n                  />\n                </View>\n                <Text style={styles.milestoneText}>\n                  {sponsorQuery.data.nextMilestone.current}/{sponsorQuery.data.nextMilestone.target} \n                  ({sponsorQuery.data.nextMilestone.remaining} kaldƒ±)\n                </Text>\n              </View>\n              \n              <FlatList\n                data={sponsorQuery.data.improvementTips}\n                keyExtractor={(item) => item.id}\n                renderItem={({ item }) => <TipCard tip={item} />}\n                scrollEnabled={false}\n              />\n            </View>\n          </>\n        )}\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.black,\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: theme.spacing.md,\n    paddingVertical: theme.spacing.lg,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.gray[800],\n  },\n  backButton: {\n    marginRight: theme.spacing.md,\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: \"600\" as const,\n    color: theme.colors.white,\n    fontFamily: theme.typography.serif.fontFamily,\n  },\n  scrollContent: {\n    paddingHorizontal: theme.spacing.md,\n    paddingBottom: theme.spacing.xl,\n    paddingTop: theme.spacing.md,\n  },\n  upsellContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: theme.spacing.md,\n  },\n  upsellCard: {\n    backgroundColor: theme.colors.white,\n    borderRadius: theme.borderRadius.xl,\n    padding: theme.spacing.xl,\n    alignItems: \"center\",\n    ...Platform.select({\n      ios: {\n        shadowColor: theme.colors.black,\n        shadowOffset: { width: 0, height: 4 },\n        shadowOpacity: 0.1,\n        shadowRadius: 12,\n      },\n      android: {\n        elevation: 4,\n      },\n    }),\n  },\n  upsellTitle: {\n    fontSize: 24,\n    fontWeight: \"700\" as const,\n    color: theme.colors.black,\n    textAlign: \"center\",\n    marginBottom: 12,\n    fontFamily: theme.typography.serif.fontFamily,\n  },\n  upsellDescription: {\n    fontSize: 16,\n    color: theme.colors.gray[600],\n    textAlign: \"center\",\n    lineHeight: 24,\n    marginBottom: 24,\n  },\n  upgradeButton: {\n    backgroundColor: \"#10B981\",\n    borderRadius: theme.borderRadius.lg,\n    paddingVertical: 16,\n    paddingHorizontal: 32,\n  },\n  upgradeButtonText: {\n    fontSize: 16,\n    fontWeight: \"600\" as const,\n    color: theme.colors.white,\n  },\n  statsCard: {\n    backgroundColor: theme.colors.white,\n    borderRadius: theme.borderRadius.lg,\n    padding: theme.spacing.lg,\n    marginBottom: theme.spacing.lg,\n    ...Platform.select({\n      ios: {\n        shadowColor: theme.colors.black,\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 8,\n      },\n      android: {\n        elevation: 2,\n      },\n    }),\n  },\n  statsTitle: {\n    fontSize: 18,\n    fontWeight: \"600\" as const,\n    color: theme.colors.black,\n    marginBottom: 16,\n    fontFamily: theme.typography.serif.fontFamily,\n  },\n  statsGrid: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n  statItem: {\n    alignItems: \"center\",\n    gap: 8,\n  },\n  statValue: {\n    fontSize: 20,\n    fontWeight: \"700\" as const,\n    color: theme.colors.black,\n    fontFamily: theme.typography.serif.fontFamily,\n  },\n  statLabel: {\n    fontSize: 12,\n    color: theme.colors.gray[500],\n    fontWeight: \"500\" as const,\n  },\n  section: {\n    marginBottom: theme.spacing.xl,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: \"600\" as const,\n    color: theme.colors.white,\n    marginBottom: 8,\n    fontFamily: theme.typography.serif.fontFamily,\n  },\n  sectionSubtitle: {\n    fontSize: 14,\n    color: theme.colors.gray[400],\n    marginBottom: 16,\n  },\n  tipsHeader: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    gap: 8,\n    marginBottom: 8,\n  },\n  milestoneProgress: {\n    marginBottom: 16,\n  },\n  milestoneBar: {\n    height: 8,\n    backgroundColor: theme.colors.gray[800],\n    borderRadius: 4,\n    marginBottom: 8,\n  },\n  milestoneBarFill: {\n    height: \"100%\",\n    backgroundColor: \"#10B981\",\n    borderRadius: 4,\n  },\n  milestoneText: {\n    fontSize: 12,\n    color: theme.colors.gray[400],\n    textAlign: \"center\",\n  },\n  sponsorCard: {\n    backgroundColor: theme.colors.white,\n    borderRadius: theme.borderRadius.lg,\n    padding: theme.spacing.md,\n    marginBottom: theme.spacing.md,\n    position: \"relative\",\n    ...Platform.select({\n      ios: {\n        shadowColor: theme.colors.black,\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 8,\n      },\n      android: {\n        elevation: 2,\n      },\n    }),\n  },\n  sponsorCardLocked: {\n    opacity: 0.6,\n  },\n  lockOverlay: {\n    position: \"absolute\",\n    top: 12,\n    right: 12,\n    zIndex: 1,\n  },\n  sponsorHeader: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 12,\n  },\n  sponsorLogo: {\n    width: 48,\n    height: 48,\n    borderRadius: 8,\n    marginRight: 12,\n  },\n  sponsorInfo: {\n    flex: 1,\n  },\n  sponsorName: {\n    fontSize: 16,\n    fontWeight: \"600\" as const,\n    color: theme.colors.black,\n    marginBottom: 2,\n  },\n  sponsorCategory: {\n    fontSize: 12,\n    color: theme.colors.gray[500],\n  },\n  matchScoreContainer: {\n    alignItems: \"center\",\n  },\n  matchScore: {\n    fontSize: 18,\n    fontWeight: \"700\" as const,\n    color: \"#10B981\",\n    fontFamily: theme.typography.serif.fontFamily,\n  },\n  matchLabel: {\n    fontSize: 10,\n    color: theme.colors.gray[500],\n  },\n  sponsorDescription: {\n    fontSize: 14,\n    color: theme.colors.gray[600],\n    lineHeight: 20,\n    marginBottom: 12,\n  },\n  sponsorBudget: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 12,\n  },\n  budgetLabel: {\n    fontSize: 14,\n    color: theme.colors.gray[500],\n    marginRight: 8,\n  },\n  budgetAmount: {\n    fontSize: 14,\n    fontWeight: \"600\" as const,\n    color: \"#10B981\",\n  },\n  requirementsContainer: {\n    marginBottom: 12,\n  },\n  requirementsTitle: {\n    fontSize: 12,\n    fontWeight: \"600\" as const,\n    color: theme.colors.gray[700],\n    marginBottom: 8,\n  },\n  requirementsList: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    gap: 12,\n  },\n  requirementItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    gap: 4,\n  },\n  requirementText: {\n    fontSize: 12,\n  },\n  requirementMet: {\n    color: \"#10B981\",\n    fontWeight: \"500\" as const,\n  },\n  requirementNotMet: {\n    color: \"#EF4444\",\n    fontWeight: \"500\" as const,\n  },\n  sponsorFooter: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n  },\n  statusBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: \"500\" as const,\n  },\n  tipCard: {\n    backgroundColor: theme.colors.white,\n    borderRadius: theme.borderRadius.md,\n    padding: theme.spacing.md,\n    marginBottom: theme.spacing.sm,\n    ...Platform.select({\n      ios: {\n        shadowColor: theme.colors.black,\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.05,\n        shadowRadius: 4,\n      },\n      android: {\n        elevation: 1,\n      },\n    }),\n  },\n  tipHeader: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  tipIcon: {\n    fontSize: 24,\n    marginRight: 12,\n  },\n  tipInfo: {\n    flex: 1,\n  },\n  tipTitle: {\n    fontSize: 14,\n    fontWeight: \"600\" as const,\n    color: theme.colors.black,\n    marginBottom: 2,\n  },\n  tipDescription: {\n    fontSize: 12,\n    color: theme.colors.gray[600],\n  },\n  tipImpact: {\n    fontSize: 12,\n    fontWeight: \"600\" as const,\n    color: \"#10B981\",\n  },\n});